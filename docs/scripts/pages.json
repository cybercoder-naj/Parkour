[{"name":"class Lexer(tokenSeparator: Regex = Regex(\"\"\"\\s\"\"\"), singleLineComments: String? = null, multilineComments: Pair<String, String>? = null, identifiers: Regex = Regex(\"\"\"[a-zA-Z_]\\w*\"\"\"), keywords: List<String> = emptyList(), operators: List<String> = emptyList(), separators: List<String> = emptyList(), literals: Literals = Literals())","description":"io.github.cybercodernaj.parkour.lexer.Lexer","location":"-parkour/io.github.cybercodernaj.parkour.lexer/-lexer/index.html","searchKeys":["Lexer","class Lexer(tokenSeparator: Regex = Regex(\"\"\"\\s\"\"\"), singleLineComments: String? = null, multilineComments: Pair<String, String>? = null, identifiers: Regex = Regex(\"\"\"[a-zA-Z_]\\w*\"\"\"), keywords: List<String> = emptyList(), operators: List<String> = emptyList(), separators: List<String> = emptyList(), literals: Literals = Literals())","io.github.cybercodernaj.parkour.lexer.Lexer"]},{"name":"class Literals","description":"io.github.cybercodernaj.parkour.lexer.Literals","location":"-parkour/io.github.cybercodernaj.parkour.lexer/-literals/index.html","searchKeys":["Literals","class Literals","io.github.cybercodernaj.parkour.lexer.Literals"]},{"name":"constructor()","description":"io.github.cybercodernaj.parkour.lexer.Literals.Literals","location":"-parkour/io.github.cybercodernaj.parkour.lexer/-literals/-literals.html","searchKeys":["Literals","constructor()","io.github.cybercodernaj.parkour.lexer.Literals.Literals"]},{"name":"constructor(tokenSeparator: Regex = Regex(\"\"\"\\s\"\"\"), singleLineComments: String? = null, multilineComments: Pair<String, String>? = null, identifiers: Regex = Regex(\"\"\"[a-zA-Z_]\\w*\"\"\"), keywords: List<String> = emptyList(), operators: List<String> = emptyList(), separators: List<String> = emptyList(), literals: Literals = Literals())","description":"io.github.cybercodernaj.parkour.lexer.Lexer.Lexer","location":"-parkour/io.github.cybercodernaj.parkour.lexer/-lexer/-lexer.html","searchKeys":["Lexer","constructor(tokenSeparator: Regex = Regex(\"\"\"\\s\"\"\"), singleLineComments: String? = null, multilineComments: Pair<String, String>? = null, identifiers: Regex = Regex(\"\"\"[a-zA-Z_]\\w*\"\"\"), keywords: List<String> = emptyList(), operators: List<String> = emptyList(), separators: List<String> = emptyList(), literals: Literals = Literals())","io.github.cybercodernaj.parkour.lexer.Lexer.Lexer"]}]
